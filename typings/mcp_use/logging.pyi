"""
This type stub file was generated by pyright.
"""

import logging

"""
Logger module for mcp_use.

This module provides a centralized logging configuration for the mcp_use library,
with customizable log levels and formatters.
"""
MCP_USE_DEBUG = ...
class Logger:
    """Centralized logger for mcp_use.

    This class provides logging functionality with configurable levels,
    formatters, and handlers.
    """
    DEFAULT_FORMAT = ...
    _loggers = ...
    @classmethod
    def get_logger(cls, name: str = ...) -> logging.Logger:
        """Get a logger instance for the specified name.

        Args:
            name: Logger name, usually the module name (defaults to 'mcp_use')

        Returns:
            Configured logger instance
        """
        ...
    
    @classmethod
    def configure(cls, level: int | str = ..., format_str: str | None = ..., log_to_console: bool = ..., log_to_file: str | None = ...) -> None:
        """Configure the root mcp_use logger.

        Args:
            level: Log level (default: DEBUG if MCP_USE_DEBUG is 2,
            INFO if MCP_USE_DEBUG is 1,
            otherwise WARNING)
            format_str: Log format string (default: DEFAULT_FORMAT)
            log_to_console: Whether to log to console (default: True)
            log_to_file: Path to log file (default: None)
        """
        ...
    
    @classmethod
    def set_debug(cls, debug_level: int = ...) -> None:
        """Set the debug flag and update the log level accordingly.

        Args:
            debug_level: Debug level (0=off, 1=info, 2=debug)
        """
        ...
    


debug_env = ...
if debug_env == "2":
    MCP_USE_DEBUG = ...
else:
    MCP_USE_DEBUG = ...
logger = ...
