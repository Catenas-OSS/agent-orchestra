"""
This type stub file was generated by pyright.
"""

from typing import Any
from mcp.client.session import ElicitationFnT, LoggingFnT, MessageHandlerFnT, SamplingFnT
from mcp_use.types.sandbox import SandboxOptions
from .connectors import BaseConnector

"""
Configuration loader for MCP session.

This module provides functionality to load MCP configuration from JSON files.
"""
def load_config_file(filepath: str) -> dict[str, Any]:
    """Load a configuration file.

    Args:
        filepath: Path to the configuration file

    Returns:
        The parsed configuration
    """
    ...

def create_connector_from_config(server_config: dict[str, Any], sandbox: bool = ..., sandbox_options: SandboxOptions | None = ..., sampling_callback: SamplingFnT | None = ..., elicitation_callback: ElicitationFnT | None = ..., message_handler: MessageHandlerFnT | None = ..., logging_callback: LoggingFnT | None = ...) -> BaseConnector:
    """Create a connector based on server configuration.
    This function can be called with just the server_config parameter:
    create_connector_from_config(server_config)
    Args:
        server_config: The server configuration section
        sandbox: Whether to use sandboxed execution mode for running MCP servers.
        sandbox_options: Optional sandbox configuration options.
        sampling_callback: Optional sampling callback function.
    Returns:
        A configured connector instance
    """
    ...

