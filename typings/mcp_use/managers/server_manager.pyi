"""
This type stub file was generated by pyright.
"""

from langchain_core.tools import BaseTool
from mcp_use.client import MCPClient
from ..adapters.base import BaseAdapter
from .base import BaseServerManager

class ServerManager(BaseServerManager):
    """Manages MCP servers and provides tools for server selection and management.

    This class allows an agent to discover and select which MCP server to use,
    dynamically activating the tools for the selected server.
    """
    def __init__(self, client: MCPClient, adapter: BaseAdapter) -> None:
        """Initialize the server manager.

        Args:
            client: The MCPClient instance managing server connections
            adapter: The LangChainAdapter for converting MCP tools to LangChain tools
        """
        ...
    
    async def initialize(self) -> None:
        """Initialize the server manager and prepare server management tools."""
        ...
    
    def get_active_server_tools(self) -> list[BaseTool]:
        """Get tools from the currently active server.

        Returns:
            List of tools from the active server, or empty list if no server is active
        """
        ...
    
    def get_management_tools(self) -> list[BaseTool]:
        """Get the server management tools.

        Returns:
            List of server management tools
        """
        ...
    
    def has_tool_changes(self, current_tool_names: set[str]) -> bool:
        """Check if the available tools have changed.

        Args:
            current_tool_names: Set of currently known tool names

        Returns:
            True if tools have changed, False otherwise
        """
        ...
    
    @property
    def tools(self) -> list[BaseTool]:
        """Get all server management tools and tools from the active server.

        Returns:
            list of LangChain tools for server management plus tools from active server
        """
        ...
    


