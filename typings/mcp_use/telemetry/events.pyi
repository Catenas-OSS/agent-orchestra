"""
This type stub file was generated by pyright.
"""

from abc import ABC, abstractmethod
from dataclasses import dataclass
from typing import Any

class BaseTelemetryEvent(ABC):
    """Base class for all telemetry events"""
    @property
    @abstractmethod
    def name(self) -> str:
        """Event name for tracking"""
        ...
    
    @property
    @abstractmethod
    def properties(self) -> dict[str, Any]:
        """Event properties to send with the event"""
        ...
    


@dataclass
class MCPAgentExecutionEvent(BaseTelemetryEvent):
    """Comprehensive event for tracking complete MCP agent execution"""
    execution_method: str
    query: str
    success: bool
    model_provider: str
    model_name: str
    server_count: int
    server_identifiers: list[dict[str, str]]
    total_tools_available: int
    tools_available_names: list[str]
    max_steps_configured: int
    memory_enabled: bool
    use_server_manager: bool
    max_steps_used: int | None
    manage_connector: bool
    external_history_used: bool
    steps_taken: int | None = ...
    tools_used_count: int | None = ...
    tools_used_names: list[str] | None = ...
    response: str | None = ...
    execution_time_ms: int | None = ...
    error_type: str | None = ...
    conversation_history_length: int | None = ...
    @property
    def name(self) -> str:
        ...
    
    @property
    def properties(self) -> dict[str, Any]:
        ...
    


