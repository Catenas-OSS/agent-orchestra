"""
This type stub file was generated by pyright.
"""

from abc import ABC
from typing import Generic, TypeVar

"""
Connection management for MCP implementations.

This module provides an abstract base class for different types of connection
managers used in MCP connectors.
"""
T = TypeVar("T")
class ConnectionManager(Generic[T], ABC):
    """Abstract base class for connection managers.

    This class defines the interface for different types of connection managers
    used with MCP connectors.
    """
    def __init__(self) -> None:
        """Initialize a new connection manager."""
        ...
    
    async def start(self) -> T:
        """Start the connection manager and establish a connection.

        Returns:
            The established connection.

        Raises:
            Exception: If connection cannot be established.
        """
        ...
    
    async def stop(self) -> None:
        """Stop the connection manager and close the connection."""
        ...
    
    def get_streams(self) -> T | None:
        """Get the current connection streams.

        Returns:
            The current connection (typically a tuple of read_stream, write_stream) or None if not connected.
        """
        ...
    


